@model CAPTeam14.Models.TKB


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <!-- Main Sidebar Container -->
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Thay thế thời khóa biểu</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="~/Home/Index">Home</a></li>
                            <li class="breadcrumb-item active">Import</li>
                        </ol>
                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </section>

        <!-- Main content -->
        <section class="content">
            <div class="container-fluid">
                <div class="main-container">
                    <div class="pd-ltr-20 xs-pd-20-10">
                        <div class="min-height-200px">
                            <div class="pd-20 card-box mb-30">
                                <form>




                                    <div class="form-group">
                                        @using (Html.BeginForm("Catalog1", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "UploadForm" }))
                                        {

                                        }

                                    </div>

                                    <div class="form-group">

                                        @using (Html.BeginForm("Catalog1", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "UploadForm", style = "width:30%" }))
                                        {
                                            @Html.LabelFor(model => model.ID_hocKy, "", htmlAttributes: new { @class = "control-label col-md-2" })


                                            @Html.EditorFor(model => model.ID_hocKy, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.test1, @readonly = "readonly", style = "display:none" } })

                                            @Html.ValidationMessageFor(model => model.ID_hocKy, "", new { @class = "text-danger" })



                                            <br />
                                            <br />


                                            <label>File Thời khóa biểu</label>

                                            <input type="file" name="excel" value="submit" onchange="checkfile(this);" accept=".xls, .xlsx" class="form-control-file form-control height-auto" required>
                                            <br />

                                            <button id="UploadFile" type="submit" class="btn btn-success" @*data-toggle="modal"*@ @*data-target="#myModal3"*@ data-backdrop="static" style="float: left">Import</button>
                                            <br />
                                            <a href="@Url.Action("Index", "Home")" style="float: right; margin-top: -20px" ; class="btn btn-danger" onclick="return confirm('Bạn có muốn Hủy?')">Hủy</a>
                                            <br />
                                            <br />
                                            <br />



                                           
                                        }

                                        <script type="text/javascript" language="javascript">
                                            function checkfile(sender) {
                                                var validExts = new Array(".xlsx", ".xls");
                                                var fileExt = sender.value;
                                                fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
                                                if (validExts.indexOf(fileExt) < 0) {
                                                    //alert("File bạn chọn không thuộc định dạng .xls hoặc .xlsx \nVui lòng chọn file đúng định dạng!");
                                                    Swal.fire({
                                                        icon: 'error',
                                                        title: 'File bạn chọn không thuộc định dạng .xls hoặc .xlsx',
                                                        text: 'Vui lòng chọn file đúng định dạng!',

                                                    })
                                                    return false;
                                                }
                                                else return true;
                                            }

                                            $('#UploadForm').submit(function (e) {
                                                e.preventDefault();
                                                Swal.fire({
                                                    title: 'Bạn có chắc chắn muốn thay thế thời khóa biểu ? Toàn bộ dữ liệu sẽ bị xóa.',
                                                    //text: "You won't be able to revert this!",
                                                    icon: 'warning',
                                                    showCancelButton: true,
                                                    confirmButtonColor: '#3085d6',
                                                    cancelButtonColor: '#d33',
                                                    confirmButtonText: 'Import',
                                                    cancelButtonText: 'Không'
                                                }).then((result) => {
                                                    if (result.isConfirmed) {
                                                        $(this).submit();
                                                        Swal.fire({
                                                            title: 'Thông báo',
                                                            html: 'Hệ thống đang xử lý yêu cầu của bạn',// add html attribute if you want or remove
                                                            showConfirmButton: false,
                                                            allowOutsideClick: false,
                                                            onBeforeOpen: () => {
                                                                Swal.showLoading()
                                                            },
                                                            onAfterClose() {
                                                                Swal.hideLoading()
                                                            },
                                                        });
                                                    }
                                                })
                                            });
                                        </script>
                                    </div>


                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}

@if (TempData["ThongBao"] != null)
{
    <script type="text/javascript">
        $(function () {
            Swal.fire({
                title: 'Thông báo',
                text: 'Bạn đã thay thế thời khóa biểu thành công !!!',
                icon: 'success',
                showConfirmButton: true,
            });
        });
    </script>
}
